{"version":3,"sources":["images/coronavirus.png","images/tenor.gif","images/error.png","images/overlay.png","components/Loading.js","components/Search.js","components/CountriesList.js","components/Country.js","pages/ErrorPage.js","pages/Countries.js","components/Navbar.js","components/Layout.js","pages/Home.js","pages/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","className","src","loadingIcon","alt","Search","props","handleOnSubmit","handleOnChange","onSubmit","type","placeholder","name","onChange","CountriesList","countries","map","country","index","key","class","Style","CountryCode","toLowerCase","Country","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","Date","slice","length","role","ErrorPage","error","errorImage","Countries","useState","setCountries","loading","setLoading","setError","query","setQuery","filteredCountry","setFilteredCountry","didSubmit","setDidSubmit","useEffect","getData","a","fetch","response","ok","json","data","status","e","target","value","preventDefault","result","filter","includes","console","log","Navbar","to","logo","Layout","children","Home","overlay","NotFound","notFoundImage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c3d507cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coronavirus.75697806.png\";","module.exports = __webpack_public_path__ + \"static/media/tenor.3551210e.gif\";","module.exports = __webpack_public_path__ + \"static/media/error.923fc5ef.png\";","module.exports = __webpack_public_path__ + \"static/media/overlay.942e46b8.png\";","import React from \"react\";\r\nimport loadingIcon from \"../images/tenor.gif\";\r\nimport \"./styles/Loading.css\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"page-loading\">\r\n      <img src={loadingIcon} alt=\"Loading\" className=\"loading-img\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./styles/Search.css\";\r\n\r\nfunction Search(props) {\r\n  const { handleOnSubmit } = props;\r\n  const { handleOnChange } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"input-group mb-3\" onSubmit={handleOnSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search country\"\r\n          name=\"input\"\r\n          onChange={handleOnChange}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nfunction CountriesList(props) {\r\n  const countries = props.countries;\r\n  return (\r\n    <div className=\"countries-body\">\r\n      <div className=\"wrapper\">\r\n        {countries.map((country, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <div className=\"container my-2\">\r\n                <div className=\"card bg-light mb-3\">\r\n                  <div\r\n                    class=\"card-header\"\r\n                    Style=\"display: flex; align-items: center\"\r\n                  >\r\n                    <img\r\n                      src={`https://www.countryflags.io/${country.CountryCode.toLowerCase()}/shiny/64.png`}\r\n                      alt=\"Flag\"\r\n                      className=\"mr-3\"\r\n                    />\r\n                    <h4 className=\"font-weight-bold text-secondary\">\r\n                      {country.Country}\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <ul className=\"mr-4\">\r\n                        <li className=\"font-weight-bold text-secondary\">\r\n                          Country Code: {country.CountryCode}\r\n                        </li>\r\n                        <li className=\"font-weight-bold text-secondary\">\r\n                          New Confirmed: {country.NewConfirmed}\r\n                        </li>\r\n                        <li className=\"font-weight-bold text-secondary\">\r\n                          Total Confirmed: {country.TotalConfirmed}\r\n                        </li>\r\n                        <li className=\"font-weight-bold text-secondary\">\r\n                          New Deaths: {country.NewDeaths}\r\n                        </li>\r\n                      </ul>\r\n                      <ul Style=\"margin-left: 200px\">\r\n                        <li className=\"font-weight-bold text-secondary\">\r\n                          Total Deaths: {country.TotalDeaths}\r\n                        </li>\r\n                        <li className=\"font-weight-bold text-secondary\">\r\n                          New Recovered: {country.NewRecovered}\r\n                        </li>\r\n                        <li className=\"font-weight-bold text-secondary\">\r\n                          Total Recovered: {country.TotalRecovered}\r\n                        </li>\r\n                        <li className=\"font-weight-bold text-secondary\">\r\n                          Date: {country.Date.slice(0, 10)}\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountriesList;\r\n","import React from \"react\";\r\n\r\nfunction Country(props) {\r\n  const country = props.country;\r\n  return (\r\n    <div className=\"countries-body\">\r\n      <div className=\"wrapper\">\r\n        {country.length !== 0 ? (\r\n          country.map((country, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <div className=\"container my-2\">\r\n                  <div className=\"card bg-light mb-3\">\r\n                    <div\r\n                      class=\"card-header\"\r\n                      Style=\"display: flex; align-items: center\"\r\n                    >\r\n                      <img\r\n                        src={`https://www.countryflags.io/${country.CountryCode.toLowerCase()}/shiny/64.png`}\r\n                        alt=\"Flag\"\r\n                        className=\"mr-3\"\r\n                      />\r\n                      <h4 className=\"font-weight-bold text-secondary\">\r\n                        {country.Country}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <ul className=\"mr-4\">\r\n                          <li className=\"font-weight-bold text-secondary\">\r\n                            Country Code: {country.CountryCode}\r\n                          </li>\r\n                          <li className=\"font-weight-bold text-secondary\">\r\n                            New Confirmed: {country.NewConfirmed}\r\n                          </li>\r\n                          <li className=\"font-weight-bold text-secondary\">\r\n                            Total Confirmed: {country.TotalConfirmed}\r\n                          </li>\r\n                          <li className=\"font-weight-bold text-secondary\">\r\n                            New Deaths: {country.NewDeaths}\r\n                          </li>\r\n                        </ul>\r\n                        <ul Style=\"margin-left: 200px\">\r\n                          <li className=\"font-weight-bold text-secondary\">\r\n                            Total Deaths: {country.TotalDeaths}\r\n                          </li>\r\n                          <li className=\"font-weight-bold text-secondary\">\r\n                            New Recovered: {country.NewRecovered}\r\n                          </li>\r\n                          <li className=\"font-weight-bold text-secondary\">\r\n                            Total Recovered: {country.TotalRecovered}\r\n                          </li>\r\n                          <li className=\"font-weight-bold text-secondary\">\r\n                            Date: {country.Date.slice(0, 10)}\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div className=\"alert alert-warning\" role=\"alert\">\r\n            No countries were found. Please verify you wrote the country's name\r\n            correctly!\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport errorImage from \"../images/error.png\";\r\nimport \"./styles/ErrorPage.css\";\r\n\r\nfunction ErrorPage(props) {\r\n  return (\r\n    <div className=\"error-image-container\">\r\n      <h3 className=\"text-secondary\">{props.error}</h3>\r\n      <img src={errorImage} alt=\"Error\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./styles/Countries.css\";\r\nimport Loading from \"../components/Loading\";\r\nimport Search from \"../components/Search\";\r\nimport CountriesList from \"../components/CountriesList\";\r\nimport Country from \"../components/Country\";\r\nimport ErrorPage from \"./ErrorPage\";\r\n\r\nfunction Countries() {\r\n  const urlApi = \"https://api.covid19api.com/summary\";\r\n  const [countries, setCountries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filteredCountry, setFilteredCountry] = useState([]);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(urlApi);\r\n    try {\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCountries(data.Countries);\r\n        setLoading(false);\r\n      } else {\r\n        throw response.status;\r\n      }\r\n    } catch (error) {\r\n      if (error === 404) {\r\n        setLoading(false);\r\n        setError(\"The requested URL does not exist\");\r\n      } else {\r\n        if (error === 429) {\r\n          setLoading(false);\r\n          setError(\r\n            \"You exceeded the total of requests allowed. Try again later\"\r\n          );\r\n        } else {\r\n          setLoading(false);\r\n          setError(\"Server error ocurred\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    const result = countries.filter((country) => {\r\n      return `${country.Country.toLowerCase()}`.includes(query.toLowerCase());\r\n    });\r\n    console.log(result);\r\n    setFilteredCountry(result);\r\n    setDidSubmit(true);\r\n  };\r\n\r\n  if (loading === true) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error !== \"\") {\r\n    return <ErrorPage error={error} />;\r\n  }\r\n\r\n  if (filteredCountry.length === 0 && didSubmit === false) {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"search-wrapper\">\r\n          <Search\r\n            handleOnSubmit={handleOnSubmit}\r\n            handleOnChange={handleOnChange}\r\n          />\r\n        </div>\r\n        <CountriesList countries={countries} />\r\n      </Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"search-wrapper\">\r\n        <Search\r\n          handleOnSubmit={handleOnSubmit}\r\n          handleOnChange={handleOnChange}\r\n        />\r\n      </div>\r\n      <Country country={filteredCountry} />\r\n    </Fragment>\r\n  );\r\n}\r\nexport default Countries;\r\n","import React from \"react\";\r\nimport logo from \"../images/coronavirus.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-light bg-success\">\r\n        <div>\r\n          <Link to=\"/\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Logo\"\r\n              className=\"img-fluid\"\r\n              Style=\"height: 30px\"\r\n            />\r\n          </Link>\r\n        </div>\r\n        <div className=\"nav-item\">\r\n          <li className=\"navbar-brand text-light\">COVID-19-INFO</li>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Fragment } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {props.children}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport overlay from \"../images/overlay.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles/Home.css\";\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className=\"hero__container\">\r\n        <div className=\"hero__container-items\">\r\n          <h2 className=\"font-weight-bold text-center text-dark\">\r\n            Get Current Informacion About COVID-19 In The World\r\n          </h2>\r\n          <Link to=\"/countries\" className=\"btn btn-danger mt-4\">\r\n            Get Started\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <img src={overlay} alt=\"Imagen\" className=\"hero__image-overlay\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport notFoundImage from \"../images/coronavirus.png\";\r\nimport \"./styles/NotFound.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"not-found-container\">\r\n      <h1 className=\"text-secondary text-danger\">404</h1>\r\n      <h3 className=\"text-secondary text-uppercase\">page not found</h3>\r\n      <img src={notFoundImage} alt=\"Error\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Countries from \"../pages/Countries\";\nimport Layout from \"./Layout\";\nimport Home from \"../pages/Home\";\nimport NotFound from \"../pages/NotFound\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/countries\" component={Countries} />\n          <Route exact path=\"/\" component={Home} />\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}